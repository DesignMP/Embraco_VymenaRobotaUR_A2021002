define(["require", "exports", "../splitterWidget/splitterDefinition", "../../common/componentBase/componentSettings", "../common/splitterWidgetData"], function (require, exports, splitterDefinition_1, componentSettings_1, splitterWidgetData_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DefaultComponentSettings = /** @class */ (function () {
        function DefaultComponentSettings() {
        }
        /**
         * Returns the default component settings for this widget
         *
         * @static
         * @returns {ComponentSettings}
         * @memberof DefaultComponentSettings
         */
        DefaultComponentSettings.getComponentViewWidgetDefinition = function () {
            var componentSettings = new componentSettings_1.ComponentSettings();
            componentSettings.addSubComponent("SplitterWidget", "SplitterWidget_ComponentView", DefaultComponentSettings.MainSplitterDefinitionId);
            return componentSettings;
        };
        DefaultComponentSettings.getMainSplitterDefinition = function () {
            var splitterComponentSettings = new splitterWidgetData_1.SplitterWidgetData(splitterDefinition_1.SplitterDefinition.orientationVertical);
            splitterComponentSettings.addPane("SplitterWidget", "SplitterWidget_TopSplitter", DefaultComponentSettings.TopSplitterDefinitionId, splitterWidgetData_1.SplitterWidgetData.getPanePersistingData(-1));
            splitterComponentSettings.addPane("MessagesWidget", "ComponentViewMessagesWidget", "", splitterWidgetData_1.SplitterWidgetData.getPanePersistingData(110));
            return splitterComponentSettings;
        };
        DefaultComponentSettings.getTopSplitterDefinition = function () {
            var splitterComponentSettings = new splitterWidgetData_1.SplitterWidgetData(splitterDefinition_1.SplitterDefinition.orientationHorizontal);
            splitterComponentSettings.addPane("MethodsWidget", "MethodsWidget", "", splitterWidgetData_1.SplitterWidgetData.getPanePersistingData(400));
            splitterComponentSettings.addPane("WatchablesWidget", "WatchablesWidget", "", splitterWidgetData_1.SplitterWidgetData.getPanePersistingData(-1));
            splitterComponentSettings.addPane("ConfigManagerWidget", "ConfigManagerWidget", "", splitterWidgetData_1.SplitterWidgetData.getPanePersistingData(750));
            return splitterComponentSettings;
        };
        DefaultComponentSettings.WidgetDefinitionId = "componentViewWidgetDefinition";
        DefaultComponentSettings.MainSplitterDefinitionId = "componentViewMainSplitterDefinition";
        DefaultComponentSettings.TopSplitterDefinitionId = "componentViewTopSplitterDefinition";
        return DefaultComponentSettings;
    }());
    exports.DefaultComponentSettings = DefaultComponentSettings;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdENvbXBvbmVudFNldHRpbmdzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2FwcC93aWRnZXRzL2NvbXBvbmVudFZpZXdXaWRnZXQvZGVmYXVsdENvbXBvbmVudFNldHRpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztJQUlBO1FBQUE7UUFpQ0EsQ0FBQztRQTNCRzs7Ozs7O1dBTUc7UUFDVyx5REFBZ0MsR0FBOUM7WUFDSSxJQUFJLGlCQUFpQixHQUFHLElBQUkscUNBQWlCLEVBQUUsQ0FBQztZQUNoRCxpQkFBaUIsQ0FBQyxlQUFlLENBQUMsZ0JBQWdCLEVBQUUsOEJBQThCLEVBQUUsd0JBQXdCLENBQUMsd0JBQXdCLENBQUMsQ0FBQztZQUN2SSxPQUFPLGlCQUFpQixDQUFDO1FBQzdCLENBQUM7UUFFYSxrREFBeUIsR0FBdkM7WUFDSSxJQUFJLHlCQUF5QixHQUFHLElBQUksdUNBQWtCLENBQUMsdUNBQWtCLENBQUMsbUJBQW1CLENBQUMsQ0FBQztZQUMvRix5QkFBeUIsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsNEJBQTRCLEVBQUUsd0JBQXdCLENBQUMsdUJBQXVCLEVBQUUsdUNBQWtCLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2xMLHlCQUF5QixDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRSw2QkFBNkIsRUFBRSxFQUFFLEVBQUUsdUNBQWtCLENBQUMscUJBQXFCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUN0SSxPQUFPLHlCQUF5QixDQUFDO1FBQ3JDLENBQUM7UUFFYSxpREFBd0IsR0FBdEM7WUFDSSxJQUFJLHlCQUF5QixHQUFHLElBQUksdUNBQWtCLENBQUMsdUNBQWtCLENBQUMscUJBQXFCLENBQUMsQ0FBQztZQUNqRyx5QkFBeUIsQ0FBQyxPQUFPLENBQUMsZUFBZSxFQUFFLGVBQWUsRUFBRSxFQUFFLEVBQUUsdUNBQWtCLENBQUMscUJBQXFCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUN2SCx5QkFBeUIsQ0FBQyxPQUFPLENBQUMsa0JBQWtCLEVBQUUsa0JBQWtCLEVBQUUsRUFBRSxFQUFFLHVDQUFrQixDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM1SCx5QkFBeUIsQ0FBQyxPQUFPLENBQUMscUJBQXFCLEVBQUUscUJBQXFCLEVBQUUsRUFBRSxFQUFFLHVDQUFrQixDQUFDLHFCQUFxQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDbkksT0FBTyx5QkFBeUIsQ0FBQztRQUNyQyxDQUFDO1FBOUJhLDJDQUFrQixHQUFHLCtCQUErQixDQUFDO1FBQ3JELGlEQUF3QixHQUFHLHFDQUFxQyxDQUFDO1FBQ2pFLGdEQUF1QixHQUFHLG9DQUFvQyxDQUFDO1FBNkJqRiwrQkFBQztLQUFBLEFBakNELElBaUNDO0lBakNZLDREQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNwbGl0dGVyRGVmaW5pdGlvbiB9IGZyb20gXCIuLi9zcGxpdHRlcldpZGdldC9zcGxpdHRlckRlZmluaXRpb25cIjtcclxuaW1wb3J0IHsgQ29tcG9uZW50U2V0dGluZ3MgfSBmcm9tIFwiLi4vLi4vY29tbW9uL2NvbXBvbmVudEJhc2UvY29tcG9uZW50U2V0dGluZ3NcIjtcclxuaW1wb3J0IHsgU3BsaXR0ZXJXaWRnZXREYXRhIH0gZnJvbSBcIi4uL2NvbW1vbi9zcGxpdHRlcldpZGdldERhdGFcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBEZWZhdWx0Q29tcG9uZW50U2V0dGluZ3N7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBXaWRnZXREZWZpbml0aW9uSWQgPSBcImNvbXBvbmVudFZpZXdXaWRnZXREZWZpbml0aW9uXCI7XHJcbiAgICBwdWJsaWMgc3RhdGljIE1haW5TcGxpdHRlckRlZmluaXRpb25JZCA9IFwiY29tcG9uZW50Vmlld01haW5TcGxpdHRlckRlZmluaXRpb25cIjtcclxuICAgIHB1YmxpYyBzdGF0aWMgVG9wU3BsaXR0ZXJEZWZpbml0aW9uSWQgPSBcImNvbXBvbmVudFZpZXdUb3BTcGxpdHRlckRlZmluaXRpb25cIjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIGRlZmF1bHQgY29tcG9uZW50IHNldHRpbmdzIGZvciB0aGlzIHdpZGdldFxyXG4gICAgICpcclxuICAgICAqIEBzdGF0aWNcclxuICAgICAqIEByZXR1cm5zIHtDb21wb25lbnRTZXR0aW5nc31cclxuICAgICAqIEBtZW1iZXJvZiBEZWZhdWx0Q29tcG9uZW50U2V0dGluZ3NcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBnZXRDb21wb25lbnRWaWV3V2lkZ2V0RGVmaW5pdGlvbigpIDogQ29tcG9uZW50U2V0dGluZ3Mge1xyXG4gICAgICAgIGxldCBjb21wb25lbnRTZXR0aW5ncyA9IG5ldyBDb21wb25lbnRTZXR0aW5ncygpO1xyXG4gICAgICAgIGNvbXBvbmVudFNldHRpbmdzLmFkZFN1YkNvbXBvbmVudChcIlNwbGl0dGVyV2lkZ2V0XCIsIFwiU3BsaXR0ZXJXaWRnZXRfQ29tcG9uZW50Vmlld1wiLCBEZWZhdWx0Q29tcG9uZW50U2V0dGluZ3MuTWFpblNwbGl0dGVyRGVmaW5pdGlvbklkKTtcclxuICAgICAgICByZXR1cm4gY29tcG9uZW50U2V0dGluZ3M7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXRNYWluU3BsaXR0ZXJEZWZpbml0aW9uKCkgOiBDb21wb25lbnRTZXR0aW5ncyB7XHJcbiAgICAgICAgbGV0IHNwbGl0dGVyQ29tcG9uZW50U2V0dGluZ3MgPSBuZXcgU3BsaXR0ZXJXaWRnZXREYXRhKFNwbGl0dGVyRGVmaW5pdGlvbi5vcmllbnRhdGlvblZlcnRpY2FsKTtcclxuICAgICAgICBzcGxpdHRlckNvbXBvbmVudFNldHRpbmdzLmFkZFBhbmUoXCJTcGxpdHRlcldpZGdldFwiLCBcIlNwbGl0dGVyV2lkZ2V0X1RvcFNwbGl0dGVyXCIsIERlZmF1bHRDb21wb25lbnRTZXR0aW5ncy5Ub3BTcGxpdHRlckRlZmluaXRpb25JZCwgU3BsaXR0ZXJXaWRnZXREYXRhLmdldFBhbmVQZXJzaXN0aW5nRGF0YSgtMSkpO1xyXG4gICAgICAgIHNwbGl0dGVyQ29tcG9uZW50U2V0dGluZ3MuYWRkUGFuZShcIk1lc3NhZ2VzV2lkZ2V0XCIsIFwiQ29tcG9uZW50Vmlld01lc3NhZ2VzV2lkZ2V0XCIsIFwiXCIsIFNwbGl0dGVyV2lkZ2V0RGF0YS5nZXRQYW5lUGVyc2lzdGluZ0RhdGEoMTEwKSk7XHJcbiAgICAgICAgcmV0dXJuIHNwbGl0dGVyQ29tcG9uZW50U2V0dGluZ3M7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXRUb3BTcGxpdHRlckRlZmluaXRpb24oKSA6IENvbXBvbmVudFNldHRpbmdzIHtcclxuICAgICAgICBsZXQgc3BsaXR0ZXJDb21wb25lbnRTZXR0aW5ncyA9IG5ldyBTcGxpdHRlcldpZGdldERhdGEoU3BsaXR0ZXJEZWZpbml0aW9uLm9yaWVudGF0aW9uSG9yaXpvbnRhbCk7XHJcbiAgICAgICAgc3BsaXR0ZXJDb21wb25lbnRTZXR0aW5ncy5hZGRQYW5lKFwiTWV0aG9kc1dpZGdldFwiLCBcIk1ldGhvZHNXaWRnZXRcIiwgXCJcIiwgU3BsaXR0ZXJXaWRnZXREYXRhLmdldFBhbmVQZXJzaXN0aW5nRGF0YSg0MDApKTtcclxuICAgICAgICBzcGxpdHRlckNvbXBvbmVudFNldHRpbmdzLmFkZFBhbmUoXCJXYXRjaGFibGVzV2lkZ2V0XCIsIFwiV2F0Y2hhYmxlc1dpZGdldFwiLCBcIlwiLCBTcGxpdHRlcldpZGdldERhdGEuZ2V0UGFuZVBlcnNpc3RpbmdEYXRhKC0xKSk7XHJcbiAgICAgICAgc3BsaXR0ZXJDb21wb25lbnRTZXR0aW5ncy5hZGRQYW5lKFwiQ29uZmlnTWFuYWdlcldpZGdldFwiLCBcIkNvbmZpZ01hbmFnZXJXaWRnZXRcIiwgXCJcIiwgU3BsaXR0ZXJXaWRnZXREYXRhLmdldFBhbmVQZXJzaXN0aW5nRGF0YSg3NTApKTtcclxuICAgICAgICByZXR1cm4gc3BsaXR0ZXJDb21wb25lbnRTZXR0aW5ncztcclxuICAgIH0gXHJcbn0iXX0=