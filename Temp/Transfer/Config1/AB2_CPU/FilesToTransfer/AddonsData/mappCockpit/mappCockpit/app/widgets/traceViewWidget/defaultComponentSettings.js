var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "../splitterWidget/splitterDefinition", "../../common/componentBase/componentSettings", "../common/splitterComponentSettings", "../../framework/componentHub/bindings/componentBinding", "../common/defaultComponentSettingsWidgetBase"], function (require, exports, splitterDefinition_1, componentSettings_1, splitterComponentSettings_1, componentBinding_1, defaultComponentSettingsWidgetBase_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DefaultComponentSettings = /** @class */ (function (_super) {
        __extends(DefaultComponentSettings, _super);
        function DefaultComponentSettings() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        /**
         * Returns the default component settings for this widget
         *
         * @static
         * @returns {ComponentSettings}
         * @memberof DefaultComponentSettings
         */
        DefaultComponentSettings.getTraceViewDefinition = function () {
            var componentSettings = new componentSettings_1.ComponentSettings();
            // add sub compontents
            componentSettings.addSubComponent("SeriesProvider", DefaultComponentSettings.SeriesProviderId);
            componentSettings.addSubComponent("SplitterWidget", DefaultComponentSettings.SplitterWidgetTraceViewId, DefaultComponentSettings.MainSplitterDefinitionId);
            // Add bindings
            componentSettings.addBinding(componentBinding_1.BindingType.COMMAND, "", "app::trace control", "load trace data", "", "invokeLoadTraceData");
            componentSettings.addBinding(componentBinding_1.BindingType.COMMAND_RESPONSE, "", "app::trace control", "trace data loaded", "onTraceDataLoaded", "");
            componentSettings.addBinding(componentBinding_1.BindingType.COMMAND_RESPONSE, "", "app::trace control", "error loading trace data", "onErrorLoadingTraceData", "");
            componentSettings.addBinding(componentBinding_1.BindingType.DATA, "", "app::trace control", "trace state", "onTraceStateChanged", "");
            return componentSettings;
        };
        DefaultComponentSettings.getMainSplitterDefinition = function () {
            var splitterComponentSettings = new splitterComponentSettings_1.SplitterComponentSettings(splitterDefinition_1.SplitterDefinition.orientationVertical);
            splitterComponentSettings.addPane("TraceControlWidget", DefaultComponentSettings.TraceControlWidgetId, "", splitterComponentSettings_1.SplitterComponentSettings.getPaneSettings(40, false));
            splitterComponentSettings.addPane("SplitterWidget", DefaultComponentSettings.SplitterWidgetMainTraceId, DefaultComponentSettings.InnerSplitterDefinitionId, splitterComponentSettings_1.SplitterComponentSettings.getPaneSettings(-1, false));
            return splitterComponentSettings;
        };
        DefaultComponentSettings.getInnerSplitterDefinition = function () {
            var splitterComponentSettings = new splitterComponentSettings_1.SplitterComponentSettings(splitterDefinition_1.SplitterDefinition.orientationHorizontal);
            splitterComponentSettings.addPane("SignalManagerWidget", DefaultComponentSettings.SignalManagerWidgetId, "", splitterComponentSettings_1.SplitterComponentSettings.getPaneSettings(350));
            splitterComponentSettings.addPane("ChartViewWidget", DefaultComponentSettings.ChartViewWidgetId, "", splitterComponentSettings_1.SplitterComponentSettings.getPaneSettings(-1, true, 150));
            splitterComponentSettings.addPane("SplitterWidget", DefaultComponentSettings.SplitterWidgetRightTraceId, DefaultComponentSettings.RightSplitterDefinitionId, splitterComponentSettings_1.SplitterComponentSettings.getPaneSettings(300));
            return splitterComponentSettings;
        };
        DefaultComponentSettings.getRightSplitterDefinition = function () {
            var splitterComponentSettings = new splitterComponentSettings_1.SplitterComponentSettings(splitterDefinition_1.SplitterDefinition.orientationVertical);
            splitterComponentSettings.addPane("ChartManagerWidget", DefaultComponentSettings.ChartManagerWidgetId, "", splitterComponentSettings_1.SplitterComponentSettings.getPaneSettings(-1));
            splitterComponentSettings.addPane("CursorInfoWidget", DefaultComponentSettings.CursorInfoWidgetId, "", splitterComponentSettings_1.SplitterComponentSettings.getPaneSettings(300));
            return splitterComponentSettings;
        };
        DefaultComponentSettings.SeriesProviderId = "SeriesProvider";
        DefaultComponentSettings.SplitterWidgetTraceViewId = "SplitterWidget_TraceView";
        DefaultComponentSettings.SplitterWidgetMainTraceId = "SplitterWidget_MainTrace";
        DefaultComponentSettings.SplitterWidgetRightTraceId = "SplitterWidget_RightTrace";
        DefaultComponentSettings.TraceControlWidgetId = "TraceControlWidget";
        DefaultComponentSettings.SignalManagerWidgetId = "SignalManagerWidget";
        DefaultComponentSettings.ChartViewWidgetId = "ChartViewWidget";
        DefaultComponentSettings.ChartManagerWidgetId = "ChartManagerWidget";
        DefaultComponentSettings.CursorInfoWidgetId = "CursorInfoWidget";
        DefaultComponentSettings.WidgetDefinitionId = "traceViewDefinition";
        DefaultComponentSettings.MainSplitterDefinitionId = "traceViewMainSplitterDefinition";
        DefaultComponentSettings.InnerSplitterDefinitionId = "traceViewInnerSplitterDefinition";
        DefaultComponentSettings.RightSplitterDefinitionId = "traceViewRightSplitterDefinition";
        return DefaultComponentSettings;
    }(defaultComponentSettingsWidgetBase_1.DefaultComponentSettingsWidgetBase));
    exports.DefaultComponentSettings = DefaultComponentSettings;
});
//# sourceMappingURL=data:application/json;base64,