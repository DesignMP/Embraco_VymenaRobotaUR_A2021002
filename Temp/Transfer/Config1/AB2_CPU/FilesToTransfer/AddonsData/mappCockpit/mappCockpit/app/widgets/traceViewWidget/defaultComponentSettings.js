define(["require", "exports", "../splitterWidget/splitterDefinition", "../../common/componentBase/componentSettings", "../common/splitterWidgetData", "../../framework/componentHub/bindings/componentBinding"], function (require, exports, splitterDefinition_1, componentSettings_1, splitterWidgetData_1, componentBinding_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DefaultComponentSettings = /** @class */ (function () {
        function DefaultComponentSettings() {
        }
        /**
         * Returns the default component settings for this widget
         *
         * @static
         * @returns {ComponentSettings}
         * @memberof DefaultComponentSettings
         */
        DefaultComponentSettings.getTraceViewDefinition = function () {
            var componentSettings = new componentSettings_1.ComponentSettings();
            componentSettings.addSubComponent("SplitterWidget", "SplitterWidget_TraceView", DefaultComponentSettings.MainSplitterDefinitionId);
            // Add bindings
            componentSettings.addBinding(componentBinding_1.BindingType.COMMAND, "", "app::trace control", "load trace data", "", "invokeLoadTraceData");
            componentSettings.addBinding(componentBinding_1.BindingType.COMMAND_RESPONSE, "", "app::trace control", "trace data loaded", "onTraceDataLoaded", "");
            componentSettings.addBinding(componentBinding_1.BindingType.COMMAND_RESPONSE, "", "app::trace control", "error loading trace data", "onErrorLoadingTraceData", "");
            componentSettings.addBinding(componentBinding_1.BindingType.DATA, "", "app::trace control", "trace state", "onTraceStateChanged", "");
            return componentSettings;
        };
        DefaultComponentSettings.getMainSplitterDefinition = function () {
            var splitterComponentSettings = new splitterWidgetData_1.SplitterWidgetData(splitterDefinition_1.SplitterDefinition.orientationVertical);
            splitterComponentSettings.addPane("TraceControlWidget", "TraceControlWidget", "", splitterWidgetData_1.SplitterWidgetData.getPanePersistingData(40, false));
            splitterComponentSettings.addPane("SplitterWidget", "SplitterWidget_MainTrace", DefaultComponentSettings.InnerSplitterDefinitionId, splitterWidgetData_1.SplitterWidgetData.getPanePersistingData(-1, false));
            return splitterComponentSettings;
        };
        DefaultComponentSettings.getInnerSplitterDefinition = function () {
            var splitterComponentSettings = new splitterWidgetData_1.SplitterWidgetData(splitterDefinition_1.SplitterDefinition.orientationHorizontal);
            splitterComponentSettings.addPane("SignalManagerWidget", "SignalManagerWidget", "", splitterWidgetData_1.SplitterWidgetData.getPanePersistingData(350));
            splitterComponentSettings.addPane("ChartViewWidget", "ChartViewWidget", "", splitterWidgetData_1.SplitterWidgetData.getPanePersistingData(-1));
            splitterComponentSettings.addPane("SplitterWidget", "SplitterWidget_RightTrace", DefaultComponentSettings.RightSplitterDefinitionId, splitterWidgetData_1.SplitterWidgetData.getPanePersistingData(300));
            return splitterComponentSettings;
        };
        DefaultComponentSettings.getRightSplitterDefinition = function () {
            var splitterComponentSettings = new splitterWidgetData_1.SplitterWidgetData(splitterDefinition_1.SplitterDefinition.orientationVertical);
            splitterComponentSettings.addPane("ChartManagerWidget", "ChartManagerWidget", "", splitterWidgetData_1.SplitterWidgetData.getPanePersistingData(-1));
            splitterComponentSettings.addPane("CursorInfoWidget", "CursorInfoWidget", "", splitterWidgetData_1.SplitterWidgetData.getPanePersistingData(300));
            return splitterComponentSettings;
        };
        DefaultComponentSettings.WidgetDefinitionId = "traceViewDefinition";
        DefaultComponentSettings.MainSplitterDefinitionId = "traceViewMainSplitterDefinition";
        DefaultComponentSettings.InnerSplitterDefinitionId = "traceViewInnerSplitterDefinition";
        DefaultComponentSettings.RightSplitterDefinitionId = "traceViewRightSplitterDefinition";
        return DefaultComponentSettings;
    }());
    exports.DefaultComponentSettings = DefaultComponentSettings;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdENvbXBvbmVudFNldHRpbmdzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2FwcC93aWRnZXRzL3RyYWNlVmlld1dpZGdldC9kZWZhdWx0Q29tcG9uZW50U2V0dGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0lBS0E7UUFBQTtRQWdEQSxDQUFDO1FBeENHOzs7Ozs7V0FNRztRQUNXLCtDQUFzQixHQUFwQztZQUNJLElBQUksaUJBQWlCLEdBQUcsSUFBSSxxQ0FBaUIsRUFBRSxDQUFDO1lBQ2hELGlCQUFpQixDQUFDLGVBQWUsQ0FBQyxnQkFBZ0IsRUFBQywwQkFBMEIsRUFBRSx3QkFBd0IsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1lBRWxJLGVBQWU7WUFDZixpQkFBaUIsQ0FBQyxVQUFVLENBQUMsOEJBQVcsQ0FBQyxPQUFPLEVBQUUsRUFBRSxFQUFFLG9CQUFvQixFQUFFLGlCQUFpQixFQUFFLEVBQUUsRUFBRSxxQkFBcUIsQ0FBQyxDQUFDO1lBQzFILGlCQUFpQixDQUFDLFVBQVUsQ0FBQyw4QkFBVyxDQUFDLGdCQUFnQixFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUNuSSxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsOEJBQVcsQ0FBQyxnQkFBZ0IsRUFBRSxFQUFFLEVBQUUsb0JBQW9CLEVBQUUsMEJBQTBCLEVBQUUseUJBQXlCLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDaEosaUJBQWlCLENBQUMsVUFBVSxDQUFDLDhCQUFXLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxhQUFhLEVBQUUscUJBQXFCLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDbkgsT0FBTyxpQkFBaUIsQ0FBQztRQUM3QixDQUFDO1FBRWEsa0RBQXlCLEdBQXZDO1lBQ0ksSUFBSSx5QkFBeUIsR0FBRyxJQUFJLHVDQUFrQixDQUFDLHVDQUFrQixDQUFDLG1CQUFtQixDQUFDLENBQUM7WUFDL0YseUJBQXlCLENBQUMsT0FBTyxDQUFDLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLEVBQUUsRUFBRSx1Q0FBa0IsQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUN2SSx5QkFBeUIsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsMEJBQTBCLEVBQUUsd0JBQXdCLENBQUMseUJBQXlCLEVBQUUsdUNBQWtCLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUN6TCxPQUFPLHlCQUF5QixDQUFDO1FBQ3JDLENBQUM7UUFFYSxtREFBMEIsR0FBeEM7WUFDSSxJQUFJLHlCQUF5QixHQUFHLElBQUksdUNBQWtCLENBQUMsdUNBQWtCLENBQUMscUJBQXFCLENBQUMsQ0FBQztZQUNqRyx5QkFBeUIsQ0FBQyxPQUFPLENBQUMscUJBQXFCLEVBQUUscUJBQXFCLEVBQUUsRUFBRSxFQUFFLHVDQUFrQixDQUFDLHFCQUFxQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDbkkseUJBQXlCLENBQUMsT0FBTyxDQUFDLGlCQUFpQixFQUFFLGlCQUFpQixFQUFFLEVBQUUsRUFBRSx1Q0FBa0IsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDMUgseUJBQXlCLENBQUMsT0FBTyxDQUFDLGdCQUFnQixFQUFFLDJCQUEyQixFQUFFLHdCQUF3QixDQUFDLHlCQUF5QixFQUFFLHVDQUFrQixDQUFDLHFCQUFxQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDcEwsT0FBTyx5QkFBeUIsQ0FBQztRQUNyQyxDQUFDO1FBRWEsbURBQTBCLEdBQXhDO1lBQ0ksSUFBSSx5QkFBeUIsR0FBRyxJQUFJLHVDQUFrQixDQUFDLHVDQUFrQixDQUFDLG1CQUFtQixDQUFDLENBQUM7WUFDL0YseUJBQXlCLENBQUMsT0FBTyxDQUFDLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLEVBQUUsRUFBRSx1Q0FBa0IsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDaEkseUJBQXlCLENBQUMsT0FBTyxDQUFDLGtCQUFrQixFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSx1Q0FBa0IsQ0FBQyxxQkFBcUIsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQzdILE9BQU8seUJBQXlCLENBQUM7UUFDckMsQ0FBQztRQTdDYSwyQ0FBa0IsR0FBRyxxQkFBcUIsQ0FBQztRQUUzQyxpREFBd0IsR0FBRyxpQ0FBaUMsQ0FBQztRQUM3RCxrREFBeUIsR0FBRyxrQ0FBa0MsQ0FBQztRQUMvRCxrREFBeUIsR0FBRyxrQ0FBa0MsQ0FBQztRQTBDakYsK0JBQUM7S0FBQSxBQWhERCxJQWdEQztJQWhEWSw0REFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTcGxpdHRlckRlZmluaXRpb24gfSBmcm9tIFwiLi4vc3BsaXR0ZXJXaWRnZXQvc3BsaXR0ZXJEZWZpbml0aW9uXCI7XHJcbmltcG9ydCB7IENvbXBvbmVudFNldHRpbmdzIH0gZnJvbSBcIi4uLy4uL2NvbW1vbi9jb21wb25lbnRCYXNlL2NvbXBvbmVudFNldHRpbmdzXCI7XHJcbmltcG9ydCB7IFNwbGl0dGVyV2lkZ2V0RGF0YSB9IGZyb20gXCIuLi9jb21tb24vc3BsaXR0ZXJXaWRnZXREYXRhXCI7XHJcbmltcG9ydCB7IEJpbmRpbmdUeXBlIH0gZnJvbSBcIi4uLy4uL2ZyYW1ld29yay9jb21wb25lbnRIdWIvYmluZGluZ3MvY29tcG9uZW50QmluZGluZ1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIERlZmF1bHRDb21wb25lbnRTZXR0aW5nc3tcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIFdpZGdldERlZmluaXRpb25JZCA9IFwidHJhY2VWaWV3RGVmaW5pdGlvblwiO1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgTWFpblNwbGl0dGVyRGVmaW5pdGlvbklkID0gXCJ0cmFjZVZpZXdNYWluU3BsaXR0ZXJEZWZpbml0aW9uXCI7XHJcbiAgICBwdWJsaWMgc3RhdGljIElubmVyU3BsaXR0ZXJEZWZpbml0aW9uSWQgPSBcInRyYWNlVmlld0lubmVyU3BsaXR0ZXJEZWZpbml0aW9uXCI7XHJcbiAgICBwdWJsaWMgc3RhdGljIFJpZ2h0U3BsaXR0ZXJEZWZpbml0aW9uSWQgPSBcInRyYWNlVmlld1JpZ2h0U3BsaXR0ZXJEZWZpbml0aW9uXCI7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBkZWZhdWx0IGNvbXBvbmVudCBzZXR0aW5ncyBmb3IgdGhpcyB3aWRnZXRcclxuICAgICAqXHJcbiAgICAgKiBAc3RhdGljXHJcbiAgICAgKiBAcmV0dXJucyB7Q29tcG9uZW50U2V0dGluZ3N9XHJcbiAgICAgKiBAbWVtYmVyb2YgRGVmYXVsdENvbXBvbmVudFNldHRpbmdzXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0VHJhY2VWaWV3RGVmaW5pdGlvbigpIDogQ29tcG9uZW50U2V0dGluZ3Mge1xyXG4gICAgICAgIGxldCBjb21wb25lbnRTZXR0aW5ncyA9IG5ldyBDb21wb25lbnRTZXR0aW5ncygpO1xyXG4gICAgICAgIGNvbXBvbmVudFNldHRpbmdzLmFkZFN1YkNvbXBvbmVudChcIlNwbGl0dGVyV2lkZ2V0XCIsXCJTcGxpdHRlcldpZGdldF9UcmFjZVZpZXdcIiwgRGVmYXVsdENvbXBvbmVudFNldHRpbmdzLk1haW5TcGxpdHRlckRlZmluaXRpb25JZCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gQWRkIGJpbmRpbmdzXHJcbiAgICAgICAgY29tcG9uZW50U2V0dGluZ3MuYWRkQmluZGluZyhCaW5kaW5nVHlwZS5DT01NQU5ELCBcIlwiLCBcImFwcDo6dHJhY2UgY29udHJvbFwiLCBcImxvYWQgdHJhY2UgZGF0YVwiLCBcIlwiLCBcImludm9rZUxvYWRUcmFjZURhdGFcIik7XHJcbiAgICAgICAgY29tcG9uZW50U2V0dGluZ3MuYWRkQmluZGluZyhCaW5kaW5nVHlwZS5DT01NQU5EX1JFU1BPTlNFLCBcIlwiLCBcImFwcDo6dHJhY2UgY29udHJvbFwiLCBcInRyYWNlIGRhdGEgbG9hZGVkXCIsIFwib25UcmFjZURhdGFMb2FkZWRcIiwgXCJcIik7XHJcbiAgICAgICAgY29tcG9uZW50U2V0dGluZ3MuYWRkQmluZGluZyhCaW5kaW5nVHlwZS5DT01NQU5EX1JFU1BPTlNFLCBcIlwiLCBcImFwcDo6dHJhY2UgY29udHJvbFwiLCBcImVycm9yIGxvYWRpbmcgdHJhY2UgZGF0YVwiLCBcIm9uRXJyb3JMb2FkaW5nVHJhY2VEYXRhXCIsIFwiXCIpO1xyXG4gICAgICAgIGNvbXBvbmVudFNldHRpbmdzLmFkZEJpbmRpbmcoQmluZGluZ1R5cGUuREFUQSwgXCJcIiwgXCJhcHA6OnRyYWNlIGNvbnRyb2xcIiwgXCJ0cmFjZSBzdGF0ZVwiLCBcIm9uVHJhY2VTdGF0ZUNoYW5nZWRcIiwgXCJcIik7XHJcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudFNldHRpbmdzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0TWFpblNwbGl0dGVyRGVmaW5pdGlvbigpIDogQ29tcG9uZW50U2V0dGluZ3Mge1xyXG4gICAgICAgIGxldCBzcGxpdHRlckNvbXBvbmVudFNldHRpbmdzID0gbmV3IFNwbGl0dGVyV2lkZ2V0RGF0YShTcGxpdHRlckRlZmluaXRpb24ub3JpZW50YXRpb25WZXJ0aWNhbCk7XHJcbiAgICAgICAgc3BsaXR0ZXJDb21wb25lbnRTZXR0aW5ncy5hZGRQYW5lKFwiVHJhY2VDb250cm9sV2lkZ2V0XCIsIFwiVHJhY2VDb250cm9sV2lkZ2V0XCIsIFwiXCIsIFNwbGl0dGVyV2lkZ2V0RGF0YS5nZXRQYW5lUGVyc2lzdGluZ0RhdGEoNDAsIGZhbHNlKSk7XHJcbiAgICAgICAgc3BsaXR0ZXJDb21wb25lbnRTZXR0aW5ncy5hZGRQYW5lKFwiU3BsaXR0ZXJXaWRnZXRcIiwgXCJTcGxpdHRlcldpZGdldF9NYWluVHJhY2VcIiwgRGVmYXVsdENvbXBvbmVudFNldHRpbmdzLklubmVyU3BsaXR0ZXJEZWZpbml0aW9uSWQsIFNwbGl0dGVyV2lkZ2V0RGF0YS5nZXRQYW5lUGVyc2lzdGluZ0RhdGEoLTEsIGZhbHNlKSk7XHJcbiAgICAgICAgcmV0dXJuIHNwbGl0dGVyQ29tcG9uZW50U2V0dGluZ3M7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXRJbm5lclNwbGl0dGVyRGVmaW5pdGlvbigpIDogQ29tcG9uZW50U2V0dGluZ3Mge1xyXG4gICAgICAgIGxldCBzcGxpdHRlckNvbXBvbmVudFNldHRpbmdzID0gbmV3IFNwbGl0dGVyV2lkZ2V0RGF0YShTcGxpdHRlckRlZmluaXRpb24ub3JpZW50YXRpb25Ib3Jpem9udGFsKTtcclxuICAgICAgICBzcGxpdHRlckNvbXBvbmVudFNldHRpbmdzLmFkZFBhbmUoXCJTaWduYWxNYW5hZ2VyV2lkZ2V0XCIsIFwiU2lnbmFsTWFuYWdlcldpZGdldFwiLCBcIlwiLCBTcGxpdHRlcldpZGdldERhdGEuZ2V0UGFuZVBlcnNpc3RpbmdEYXRhKDM1MCkpO1xyXG4gICAgICAgIHNwbGl0dGVyQ29tcG9uZW50U2V0dGluZ3MuYWRkUGFuZShcIkNoYXJ0Vmlld1dpZGdldFwiLCBcIkNoYXJ0Vmlld1dpZGdldFwiLCBcIlwiLCBTcGxpdHRlcldpZGdldERhdGEuZ2V0UGFuZVBlcnNpc3RpbmdEYXRhKC0xKSk7XHJcbiAgICAgICAgc3BsaXR0ZXJDb21wb25lbnRTZXR0aW5ncy5hZGRQYW5lKFwiU3BsaXR0ZXJXaWRnZXRcIiwgXCJTcGxpdHRlcldpZGdldF9SaWdodFRyYWNlXCIsIERlZmF1bHRDb21wb25lbnRTZXR0aW5ncy5SaWdodFNwbGl0dGVyRGVmaW5pdGlvbklkLCBTcGxpdHRlcldpZGdldERhdGEuZ2V0UGFuZVBlcnNpc3RpbmdEYXRhKDMwMCkpO1xyXG4gICAgICAgIHJldHVybiBzcGxpdHRlckNvbXBvbmVudFNldHRpbmdzO1xyXG4gICAgfSBcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldFJpZ2h0U3BsaXR0ZXJEZWZpbml0aW9uKCkgOiBDb21wb25lbnRTZXR0aW5ncyB7XHJcbiAgICAgICAgbGV0IHNwbGl0dGVyQ29tcG9uZW50U2V0dGluZ3MgPSBuZXcgU3BsaXR0ZXJXaWRnZXREYXRhKFNwbGl0dGVyRGVmaW5pdGlvbi5vcmllbnRhdGlvblZlcnRpY2FsKTtcclxuICAgICAgICBzcGxpdHRlckNvbXBvbmVudFNldHRpbmdzLmFkZFBhbmUoXCJDaGFydE1hbmFnZXJXaWRnZXRcIiwgXCJDaGFydE1hbmFnZXJXaWRnZXRcIiwgXCJcIiwgU3BsaXR0ZXJXaWRnZXREYXRhLmdldFBhbmVQZXJzaXN0aW5nRGF0YSgtMSkpO1xyXG4gICAgICAgIHNwbGl0dGVyQ29tcG9uZW50U2V0dGluZ3MuYWRkUGFuZShcIkN1cnNvckluZm9XaWRnZXRcIiwgXCJDdXJzb3JJbmZvV2lkZ2V0XCIsIFwiXCIsIFNwbGl0dGVyV2lkZ2V0RGF0YS5nZXRQYW5lUGVyc2lzdGluZ0RhdGEoMzAwKSk7XHJcbiAgICAgICAgcmV0dXJuIHNwbGl0dGVyQ29tcG9uZW50U2V0dGluZ3M7XHJcbiAgICB9XHJcbn0iXX0=